@page "/spells"
@inject HttpClient Http
@using DNDSpellBook.Components

    <div class="page">
        <h3>Spells Home</h3>

        <label>Search: </label>
        <input type="text" @bind-value="@searchTerm" @bind-value:event="oninput" />


        @if (!loaded)
        {
            <div>Loading your spellbook...</div>
        }
        else
        {
            @foreach (CasterClass cc in CasterClasses)
            {
                <CasterComponent Caster="@cc" />



            }
        }
    </div>

@code {
    List<SpellRAW> rawSpells = new List<SpellRAW>();
    List<Spell> spells = new List<Spell>();
    List<CasterClass> CasterClasses = new List<CasterClass>();

    bool loaded = false;
    string searchTerm { get; set; } = "";

    protected override async Task OnInitializedAsync()
    {
        rawSpells = await Http.GetJsonAsync<List<SpellRAW>>("spell-data/spells2.json");
        spells = Spell.ConvertRawSpells(rawSpells);

        foreach (CastClass cc in Enum.GetValues(typeof(CastClass)).Cast<CastClass>().ToList())
        {
            CasterClasses.Add(new CasterClass(cc, spells));
        }
        loaded = true;
    }



    List<Spell> filteredSpells => spells.Where(i => i.Name.ToUpper().Contains(searchTerm.ToUpper())).ToList();


}
@functions{

}
